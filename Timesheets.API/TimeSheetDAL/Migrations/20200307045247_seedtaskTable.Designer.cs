// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeSheetDAL.Models;

namespace TimeSheetDAL.Migrations
{
    [DbContext(typeof(TimeSheetDbContext))]
    [Migration("20200307045247_seedtaskTable")]
    partial class seedtaskTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeSheetDAL.BO.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("TaskId");

                    b.HasKey("EmpId");

                    b.HasIndex("TaskId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TimeSheetDAL.BO.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("TaskId");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            Description = "Apply this task on sick leave.",
                            Name = "Sick Leave"
                        },
                        new
                        {
                            TaskId = 2,
                            Description = "Scrum meetings, standup, sprint plannig, grooming etc.",
                            Name = "Scrum Ceremonies"
                        },
                        new
                        {
                            TaskId = 3,
                            Description = "Meetings Meetings.",
                            Name = "Internal Meetings"
                        },
                        new
                        {
                            TaskId = 4,
                            Description = "Development tasks, features, change requets.",
                            Name = "Development"
                        },
                        new
                        {
                            TaskId = 5,
                            Description = "You know what it means.",
                            Name = "Bug Fixes"
                        });
                });

            modelBuilder.Entity("TimeSheetDAL.BO.Employee", b =>
                {
                    b.HasOne("TimeSheetDAL.BO.Task", "Task")
                        .WithMany("Employees")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
